library(ape)
library(ggplot2)
library(rwty)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(salamanders)
salamanders.rwty <- analyze.rwty(salamanders, burnin=50, fill.color = 'LnL')
# to see which plots you have
names(salamanders.rwty)
makeplot.all.params(salamanders, burnin=0) # the LnL trace suggests burnin should be >0
makeplot.all.params(salamanders, burnin=50) # this looks OK
approx.ess <- topological.approx.ess(salamanders, burnin = 50)
salamanders.rwty$topology.trace
library(ape)
library(ggplot2)
library(rwty)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(salamanders)
salamanders.rwty <- analyze.rwty(salamanders, burnin=50, fill.color = 'LnL')
library(ape)
library(ggplot2)
library(rwty)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(salamanders)
salamanders.rwty <- analyze.rwty(salamanders, burnin=50, fill.color = 'LnL')
# to see which plots you have
names(salamanders.rwty)
makeplot.all.params(salamanders, burnin=0) # the LnL trace suggests burnin should be >0
makeplot.all.params(salamanders, burnin=50) # this looks OK
approx.ess <- topological.approx.ess(salamanders, burnin = 50)
salamanders.rwty$topology.trace
salamanders.rwty$autocorr.plot
salamanders.rwty$treespace.points.plot
salamanders.treespace$treespace.points.plot
salamanders.treespace$treespace.points.plot
salamanders.treespace = makeplot.treespace(salamanders[1:2], burnin = 50, n.points = 200, fill.color = "LnL")
salamanders.treespace$treespace.points.plot
salamanders.rwty$splitfreq.matrix
salamanders.rwty$splitfreq.matrix
makeplot.asdsf(salamanders[c(1,2)])
library(ape)
library(ggplot2)
library(rwty)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- analyze.rwty(my.trees, burnin=50, fill.color = 'LnL')
mytrees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(mytrees)
library(ape)
library(ggplot2)
library(rwty)
data(salamanders)
salamanders.rwty <- analyze.rwty(salamanders, burnin=50, fill.color = 'LnL')
# to see which plots you have
names(salamanders.rwty)
makeplot.all.params(salamanders, burnin=0) # the LnL trace suggests burnin should be >0
makeplot.all.params(salamanders, burnin=50) # this looks OK
approx.ess <- topological.approx.ess(salamanders, burnin = 50)
salamanders.rwty$topology.trace
salamanders.rwty$autocorr.plot
salamanders.rwty$treespace.points.plot
salamanders.treespace = makeplot.treespace(salamanders[1:2], burnin = 50, n.points = 200, fill.color = "LnL")
salamanders.treespace$treespace.points.plot
salamanders.rwty$splitfreq.matrix
data(salamanders)
library(ape)
library(ggplot2)
library(rwty)
data(salamanders)
salamanders.rwty <- analyze.rwty(salamanders, burnin=50, fill.color = 'LnL')
# to see which plots you have
names(salamanders.rwty)
makeplot.all.params(salamanders, burnin=0) # the LnL trace suggests burnin should be >0
makeplot.all.params(salamanders, burnin=50) # this looks OK
approx.ess <- topological.approx.ess(salamanders, burnin = 50)
salamanders.rwty$topology.trace
salamanders.rwty$autocorr.plot
salamanders.rwty$treespace.points.plot
salamanders.treespace = makeplot.treespace(salamanders[1:2], burnin = 50, n.points = 200, fill.color = "LnL")
salamanders.treespace$treespace.points.plot
salamanders.rwty$splitfreq.matrix
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees.rwty <- analyze.rwty(my.trees, burnin=50, fill.color = 'LnL')
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees
my.trees
my.trees
my.trees
my.trees
my.trees
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
my.trees <- load.multi("/Users/niuguigui/sx/bin", format = "mb")
data(my.trees)
my.trees.rwty <- analyze.rwty(my.trees, burnin=50, fill.color = 'LnL')
mytrees$topology.trace
packageVersion("pegas")
packageVersion("haplotypes")
library(pegas)
library(ape)
library(igraph)
path = "/Users/niuguigui/Documents/its2/haplotype/cladeA-I_mafft_alignment"
setwd(path)
x<-read.dna(file='cladeC.mafft.aln.fas',format = "fasta")
index<-1:nrow(x)
h <- haplotype(x,indels="sic")
hn<-haploNet(h)
net<-as.igraph(hn,altlinks = F,use.labels =TRUE)
e <- get.edgelist(net)
pdf("cladeC.pdf", height=45, width=65)
plot(net,vertex.size=1.2,vertex.color="black",e.arrow.size=100,e.width=0.1,e.color="black",e.curved=0,rescale=T)
deg <- degree(net, mode="all")
plot(net,vertex.size=1.2,vertex.color="black",vertex.label=NA,edge.arrow.size=100,edge.width=0.1,edge.color="black",edge.curved=0,rescale=T)
dev.off()
write.csv(hn,"cladeC.hn2.csv")
write.csv(x,"x.csv")
sink("My28.txt")
print.default(h)
getOption("max.print")
sink("My28.txt")
print.default(h)
options(max.print=1000000) 
sink("My28.txt")
options(max.print=1000000) 
sink("My28.txt")
print.default(h)
library(pegas)
library(ape)
library(igraph)
path = "/Users/niuguigui/Documents/its2/haplotype/cladeA-I_mafft_alignment"
setwd(path)
cladeArray<-c("A","B","C","D","E","F","G","H","I")
#循环cladeArray，循环处理cladeA-I：
#cladeA.mafft.aln.fas
#cladeB.mafft.aln.fas
#cladeC.mafft.aln.fas
#cladeD.mafft.aln.fas
#cladeE.mafft.aln.fas
#cladeF.mafft.aln.fas
#cladeG.mafft.aln.fas
#cladeH.mafft.aln.fas
#cladeI.mafft.aln.fas
for(i in 1:9){
#拼接文件名称
fileName=paste("clade",cladeArray[i],".mafft.aln.fas",sep="")
x<-read.dna(file=fileName,format = "fasta")
index<-1:nrow(x)
h <- haplotype(x,indels="sic")
hn<-haploNet(h)
net<-as.igraph(hn,altlinks = F,use.labels =TRUE)
e <- get.edgelist(net)
pdf(paste(fileName,".mjn.pdf",sep=""), height=45, width=65)
deg <- degree(net, mode="all")
for(j in 1:10){#连续输出10个，选个好看的
plot(net,vertex.size=1.2,vertex.color="black",edge.arrow.size=100,edge.width=0.1,edge.color="black",edge.curved=0,rescale=T)
}
dev.off()
write.csv(hn,paste(fileName,".mjn.csv",sep=""))
options(max.print=1000000)
sink(paste(fileName,".mjn.txt",sep=""))
print.default(h)
}
library(pegas)
library(ape)
library(igraph)
path = "/Users/niuguigui/Documents/its2/haplotype/cladeA-I_mafft_alignment"
setwd(path)
cladeArray<-c("A","B","C","D","E","F","G","H","I")
#循环cladeArray，循环处理cladeA-I：
#cladeA.mafft.aln.fas
#cladeB.mafft.aln.fas
#cladeC.mafft.aln.fas
#cladeD.mafft.aln.fas
#cladeE.mafft.aln.fas
#cladeF.mafft.aln.fas
#cladeG.mafft.aln.fas
#cladeH.mafft.aln.fas
#cladeI.mafft.aln.fas
for(i in 1:9){
#拼接文件名称
fileName=paste("clade",cladeArray[i],".mafft.aln.fas",sep="")
x<-read.dna(file=fileName,format = "fasta")
index<-1:nrow(x)
h <- haplotype(x,indels="sic")
hn<-haploNet(h)
net<-as.igraph(hn,altlinks = F,use.labels =TRUE)
e <- get.edgelist(net)
pdf(paste(fileName,".mjn.pdf",sep=""), height=45, width=65)
deg <- degree(net, mode="all")
for(j in 1:10){#连续输出10个，选个好看的
plot(net,vertex.size=1.2,vertex.color="black",edge.arrow.size=100,edge.width=0.1,edge.color="black",edge.curved=0,rescale=T)
}
dev.off()
write.csv(hn,paste(fileName,".mjn.csv",sep=""))
options(max.print=1000000)
sink(paste(fileName,".mjn.txt",sep=""))
print.default(h)
}
library(pegas)
library(ape)
library(igraph)
path = "/Users/niuguigui/Documents/its2/haplotype/cladeA-I_mafft_alignment"
setwd(path)
cladeArray<-c("A","B","C","D","E","F","G","H","I")
#循环cladeArray，循环处理cladeA-I：
#cladeA.mafft.aln.fas
#cladeB.mafft.aln.fas
#cladeC.mafft.aln.fas
#cladeD.mafft.aln.fas
#cladeE.mafft.aln.fas
#cladeF.mafft.aln.fas
#cladeG.mafft.aln.fas
#cladeH.mafft.aln.fas
#cladeI.mafft.aln.fas
for(i in 1:9){
#拼接文件名称
fileName=paste("clade",cladeArray[i],".mafft.aln.fas",sep="")
dnaMatrix<-read.dna(file=fileName,format = "fasta")
h <- haplotype(dnaMatrix,indels="sic")
hn<-haploNet(h)
net<-as.igraph(hn,altlinks = F,use.labels =TRUE)
e <- get.edgelist(net)
pdf(paste(fileName,".mjn.pdf",sep=""), height=45, width=65)
deg <- degree(net, mode="all")
for(j in 1:10){#连续输出10个，选个好看的
plot(net,vertex.size=1.2,vertex.color="black",edge.arrow.size=100,edge.width=0.1,edge.color="black",edge.curved=0,rescale=T)
}
dev.off()
write.csv(hn,paste(fileName,".mjn.csv",sep=""))
write.csv(dnaMatrix,paste(fileName,".matrix.csv",sep=""))
options(max.print=1000000)
sink(paste(fileName,".mjn.txt",sep=""))
print.default(h)
}
library(pegas)
library(ape)
library(igraph)
path = "/Users/niuguigui/Documents/its2/haplotype/cladeA-I_mafft_alignment"
setwd(path)
cladeArray<-c("A","B","C","D","E","F","G","H","I")
#循环cladeArray，循环处理cladeA-I：
#cladeA.mafft.aln.fas
#cladeB.mafft.aln.fas
#cladeC.mafft.aln.fas
#cladeD.mafft.aln.fas
#cladeE.mafft.aln.fas
#cladeF.mafft.aln.fas
#cladeG.mafft.aln.fas
#cladeH.mafft.aln.fas
#cladeI.mafft.aln.fas
for(i in 1:9){
#拼接文件名称
fileName=paste("clade",cladeArray[i],".mafft.aln.fas",sep="")
dnaMatrix<-read.dna(file=fileName,format = "fasta")
h <- haplotype(dnaMatrix,indels="sic")
hn<-haploNet(h)
net<-as.igraph(hn,altlinks = F,use.labels =TRUE)
e <- get.edgelist(net)
pdf(paste(fileName,".mjn.pdf",sep=""), height=45, width=65)
deg <- degree(net, mode="all")
for(j in 1:10){#连续输出10个，选个好看的
plot(net,vertex.size=1.2,vertex.color="black",edge.arrow.size=100,edge.width=0.1,edge.color="black",edge.curved=0,rescale=T)
}
dev.off()
write.csv(hn,paste(fileName,".mjn.csv",sep=""))
write.csv(dnaMatrix,paste(fileName,".matrix.csv",sep=""))
options(max.print=1000000)
sink(paste(fileName,".mjn.txt",sep=""))
print.default(h)
sink()
}
library(pegas)
library(ape)
library(igraph)
path = "/Users/niuguigui/Documents/its2/haplotype/cladeA-I_mafft_alignment"
setwd(path)
cladeArray<-c("A","B","C","D","E","F","G","H","I")
#循环cladeArray，循环处理cladeA-I：
#cladeA.mafft.aln.fas
#cladeB.mafft.aln.fas
#cladeC.mafft.aln.fas
#cladeD.mafft.aln.fas
#cladeE.mafft.aln.fas
#cladeF.mafft.aln.fas
#cladeG.mafft.aln.fas
#cladeH.mafft.aln.fas
#cladeI.mafft.aln.fas
for(i in 1:9){
#拼接文件名称
fileName=paste("clade",cladeArray[i],".mafft.aln.fas",sep="")
dnaMatrix<-read.dna(file=fileName,format = "fasta")
h <- haplotype(dnaMatrix,indels="sic")
hn<-haploNet(h)
net<-as.igraph(hn,altlinks = F,use.labels =TRUE)
e <- get.edgelist(net)
pdf(paste(fileName,".mjn.pdf",sep=""), height=45, width=65)
deg <- degree(net, mode="all")
for(j in 1:10){#连续输出10个，选个好看的
plot(net,vertex.size=1.2,vertex.color="black",edge.arrow.size=100,edge.width=0.1,edge.color="black",edge.curved=0,rescale=T)
}
dev.off()
sink()
write.csv(hn,paste(fileName,".mjn.csv",sep=""))
write.csv(dnaMatrix,paste(fileName,".matrix.csv",sep=""))
options(max.print=1000000)
sink(paste(fileName,".mjn.txt",sep=""))
print.default(h)
sink()
}
library(pegas)
library(ape)
library(igraph)
path = "/Users/niuguigui/Documents/its2/haplotype/cladeA-I_mafft_alignment"
setwd(path)
sink()
cladeArray<-c("A","B","C","D","E","F","G","H","I")
#循环cladeArray，循环处理cladeA-I：
#cladeA.mafft.aln.fas
#cladeB.mafft.aln.fas
#cladeC.mafft.aln.fas
#cladeD.mafft.aln.fas
#cladeE.mafft.aln.fas
#cladeF.mafft.aln.fas
#cladeG.mafft.aln.fas
#cladeH.mafft.aln.fas
#cladeI.mafft.aln.fas
for(i in 1:9){
#拼接文件名称
fileName=paste("clade",cladeArray[i],".mafft.aln.fas",sep="")
dnaMatrix<-read.dna(file=fileName,format = "fasta")
h <- haplotype(dnaMatrix,indels="sic")
hn<-haploNet(h)
net<-as.igraph(hn,altlinks = F,use.labels =TRUE)
e <- get.edgelist(net)
pdf(paste(fileName,".mjn.pdf",sep=""), height=45, width=65)
deg <- degree(net, mode="all")
for(j in 1:10){#连续输出10个，选个好看的
plot(net,vertex.size=1.2,vertex.color="black",edge.arrow.size=100,edge.width=0.1,edge.color="black",edge.curved=0,rescale=T)
}
dev.off()
write.csv(hn,paste(fileName,".mjn.csv",sep=""))
write.csv(dnaMatrix,paste(fileName,".matrix.csv",sep=""))
options(max.print=1000000)
sink(paste(fileName,".mjn.txt",sep=""))
print.default(h)
sink()
}
